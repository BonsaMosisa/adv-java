package labclass;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
//key,mouse,cursor overodeninterface whem usign press,release,type
//phone
//dropdown
//storeon the varibale
//calculatorstore store the number keeoing the history and dispalying it

public class LabClass extends Application {

    @Override
    public void start(Stage primaryStage) {

        Label idLabel = new Label("ID:");
        Label nameLabel = new Label("Name:");
        Label genderLabel = new Label("Gender:");
        Label historyLabel = new Label("History:");
        Label phoneLabel = new Label("Phone Number");
        Label departmentLabel = new Label("Department");

        TextField idField = new TextField();
        TextField nameField = new TextField();
        RadioButton maleGender = new RadioButton("Male");
        RadioButton femaleGender = new RadioButton("Female");
        ToggleGroup genderGroup = new ToggleGroup();
        maleGender.setToggleGroup(genderGroup);
        femaleGender.setToggleGroup(genderGroup);
        TextField phoneField = new TextField();
        ComboBox<String> departmentBox = new ComboBox<>();

        departmentBox.getItems().addAll("Software Engineering", "Computer Science", "IT", "Electrical Engineering");
        departmentBox.setValue("Software Engineering");
        TextArea historyArea = new TextArea();
        historyArea.setEditable(false);
        historyArea.setPrefHeight(100);

        Button resetBtn = new Button("Reset");
        Button saveBtn = new Button("Save");

        GridPane grid = new GridPane();
        grid.setPadding(new Insets(10));
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setAlignment(Pos.CENTER);

        grid.add(idLabel, 0, 0);
        grid.add(idField, 1, 0);
        grid.add(nameLabel, 0, 1);
        grid.add(nameField, 1, 1);
        grid.add(genderLabel, 0, 2);
        grid.add(maleGender, 1, 2);
        grid.add(femaleGender, 2, 2);
        grid.add(phoneLabel, 0, 3);
        grid.add(phoneField, 1, 3);
        grid.add(departmentLabel, 0, 4);
        grid.add(departmentBox, 1, 4);
        grid.add(saveBtn, 0, 5);
        grid.add(resetBtn, 1, 5);
        grid.add(historyLabel, 0, 6);
        grid.add(historyArea, 0, 7, 2, 2);

        saveBtn.setOnAction(e -> {
            String id = idField.getText();
            String phoneNumber = phoneField.getText();
            System.out.println(phoneNumber);
            String name = nameField.getText();
            String department = departmentBox.getValue();
            System.out.println(department);
            String gender = maleGender.isSelected() ? "Male" : femaleGender.isSelected() ? "Female" : "Not specified";
            if (!id.isEmpty() && !name.isEmpty()) {
                historyArea.appendText("ID: " + id + "\nName: " + name + "\nGender: " + gender + " \nPhone Number :"
                        + phoneNumber + "\nDepartment :" + department);
                idField.clear();
                nameField.clear();
                maleGender.setSelected(false);
                femaleGender.setSelected(false);
            }
        });

        resetBtn.setOnAction(e -> {
            idField.clear();
            nameField.clear();
            historyArea.clear();
            maleGender.setSelected(false);
            femaleGender.setSelected(false);
        });
        phoneField.setOnMouseClicked(event -> {
            System.out.println("Mouse Clicked in Phone Field");
        });

        phoneField.setOnKeyPressed(event -> {
            System.out.println("Key Pressed: " + event.getText());
        });

        phoneField.setOnKeyReleased(event -> {
            String text = phoneField.getText();
            if (!text.matches("\\d*")) {
                phoneField.setText(text.replaceAll("[^\\d]", "")); // Remove non-numeric characters
            }
            if (text.length() > 10) { // Restrict to 10 digits
                phoneField.setText(text.substring(0, 10));
            }
        });

        Scene scene = new Scene(grid, 400, 600);
        primaryStage.setTitle("User Input Form");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
